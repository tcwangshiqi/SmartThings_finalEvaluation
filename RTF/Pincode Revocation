{\rtf1\ansi\deff0{\fonttbl{\f0\fmodern\fprq1\fcharset0;}}{\colortbl;\red0\green0\blue128;\red186\green33\blue33;\red210\green65\blue58;\red128\green0\blue128;\red160\green160\blue0;\red170\green34\blue255;\red0\green128\blue0;\red187\green102\blue136;\red160\green0\blue0;\red25\green23\blue124;\red255\green0\blue0;\red102\green102\blue102;\red0\green0\blue255;\red176\green0\blue64;\red0\green68\blue221;\red187\green102\blue34;\red136\green0\blue0;\red188\green122\blue0;\red64\green128\blue128;\red136\green136\blue136;\red125\green144\blue41;\red0\green160\blue0;\red187\green187\blue187;\red153\green153\blue153;}\f0{\cf19\i /**\par
 *  shiqiPIncodeRevocation\par
 *\par
 *  Copyright 2016 Yunhan Jia & Shiqi Wang\par
 *\par
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except\par
 *  in compliance with the License. You may obtain a copy of the License at:\par
 *\par
 *      http://www.apache.org/licenses/LICENSE-2.0\par
 *\par
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed\par
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License\par
 *  for the specific language governing permissions and limitations under the License.\par
 *\par
 */}\par
definition{\cf12 (}\par
    {\cf5 name:} {\cf2 "shiqiPIncodeRevocation"}{\cf12 ,}\par
    {\cf5 namespace:} {\cf2 "wsq"}{\cf12 ,}\par
    {\cf5 author:} {\cf2 "Yunhan Jia & Shiqi Wang"}{\cf12 ,}\par
    {\cf5 description:} {\cf2 "The pincode would be deleted when it is expired."}{\cf12 ,}\par
    {\cf5 category:} {\cf2 "Safety & Security"}{\cf12 ,}\par
    {\cf5 iconUrl:} {\cf2 "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png"}{\cf12 ,}\par
    {\cf5 iconX2Url:} {\cf2 "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png"}{\cf12 ,}\par
    {\cf5 iconX3Url:} {\cf2 "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png"}{\cf12 )}\par
\par
{\cf7\b import} {\cf13\b org.joda.time.DateTime}\par
\par
preferences {\cf12 \{}\par
    page{\cf12 (}{\cf5 name:} {\cf2 "setupApp"}{\cf12 )}\par
{\cf12 \}}\par
\par
{\cf14 def} {\cf13 setupApp}{\cf12 (}{\cf12 )} {\cf12 \{}\par
    dynamicPage{\cf12 (}{\cf5 name:} {\cf2 "setupApp"}{\cf12 ,} {\cf5 title:} {\cf2 "Lock User Management"}{\cf12 ,} {\cf5 install:} {\cf7\b true}{\cf12 ,} {\cf5 uninstall:} {\cf7\b true}{\cf12 )} {\cf12 \{}    \par
        section{\cf12 (}{\cf2 "Select Lock(s)"}{\cf12 )} {\cf12 \{}\par
            input {\cf2 "locks"}{\cf12 ,}{\cf2 "capability.lock"}{\cf12 ,} {\cf5 title:} {\cf2 "Lock"}{\cf12 ,} {\cf5 multiple:} {\cf7\b true}{\cf12 ,}  {\cf5 submitOnChange:}{\cf7\b true}\par
        {\cf12 \}}\par
        section{\cf12 (}{\cf2 "User Management"}{\cf12 )} {\cf12 \{}\par
            input {\cf2 "user"}{\cf12 ,} {\cf2 "number"}{\cf12 ,} {\cf5 title:} {\cf2 "User Slot Number"}{\cf12 ,} {\cf5 description:} {\cf2 "This is the user slot number on the lock and not the user passcode"}{\cf12 ,}  {\cf5 submitOnChange:}{\cf7\b true}\par
            input {\cf2 "action"}{\cf12 ,} {\cf2 "enum"}{\cf12 ,} {\cf5 title:} {\cf2 "Add/Update/Delete User?"}{\cf12 ,} {\cf5 required:} {\cf7\b true}{\cf12 ,} {\cf5 options:} {\cf12 [}{\cf2 "Add/Update"}{\cf12 ,}{\cf2 "Delete"}{\cf12 ]}{\cf12 ,}  {\cf5 submitOnChange:}{\cf7\b true}\par
        {\cf12 \}}\par
\par
        {\cf7\b if} {\cf12 (}action {\cf12 =}{\cf12 =} {\cf2 "Add/Update"}{\cf12 )} {\cf12 \{}\par
            {\cf14 def} invalidDate {\cf12 =} {\cf7\b true}\par
            {\cf7\b if} {\cf12 (}expDate{\cf12 )} {\cf12 \{}\par
                log{\cf12 .}{\cf21 debug} {\cf2 "Found expiry date in setup"}\par
                {\cf7\b try} {\cf12 \{}\par
                    Date{\cf12 .}{\cf21 parse}{\cf12 (}{\cf2 "yyyy-MM-dd"}{\cf12 ,} expDate{\cf12 )}\par
                    invalidDate {\cf12 =} {\cf7\b false}\par
                {\cf12 \}}\par
                {\cf7\b catch} {\cf12 (}Exception e{\cf12 )} {\cf12 \{}\par
                    log{\cf12 .}{\cf21 debug} {\cf2 "Invalid expiry date in setup"}\par
                    invalidDate {\cf12 =} {\cf7\b true}\par
                {\cf12 \}}\par
            {\cf12 \}}\par
\par
            section{\cf12 (}{\cf2 "Add/Update User Code"}{\cf12 )} {\cf12 \{}\par
                input {\cf2 "code"}{\cf12 ,} {\cf2 "text"}{\cf12 ,} {\cf5 title:} {\cf2 "User Passcode (check your lock passcode length)"}{\cf12 ,} {\cf5 defaultValue:} {\cf2 "X"}{\cf12 ,} {\cf5 description:} {\cf2 "The user passcode for adding/updating a new user (enter X for deleting user)"}\par
            {\cf12 \}}\par
\par
            section{\cf12 (}{\cf2 "Code Expiration Date and Time (Optional)"}{\cf12 )} {\cf12 \{}\par
                {\cf7\b if} {\cf12 (}expDate {\cf12 &}{\cf12 &} invalidDate {\cf12 =}{\cf12 =} {\cf7\b true}{\cf12 )} {\cf12 \{}\par
                    paragraph {\cf2 "INVALID DATE - PLEASE CHECK YOUR DATE FORMAT"}\par
                {\cf12 \}}\par
                {\cf7\b else} {\cf13 if} {\cf12 (}expDate{\cf12 )} {\cf12 \{}\par
                    {\cf14 def} ed {\cf12 =} Date{\cf12 .}{\cf21 parse}{\cf12 (}{\cf2 "yyyy-MM-dd"}{\cf12 ,} expDate{\cf12 )}\par
                    paragraph {\cf2 "Code expiry date set for $\{ed.format("}EEE MMM dd yyyy{\cf2 ")\}"}\par
                {\cf12 \}}\par
\par
                {\cf7\b if} {\cf12 (}expDate{\cf12 )} {\cf12 \{}\par
                    {\cf7\b if} {\cf12 (}{\cf12 !}expTime{\cf12 )} {\cf12 \{}\par
                        paragraph {\cf2 "PLEASE ENTER TIME FOR CODE EXPIRY"}\par
                    {\cf12 \}}\par
                {\cf12 \}}\par
\par
                input {\cf2 "expDate"}{\cf12 ,} {\cf2 "date"}{\cf12 ,} {\cf5 title:} {\cf2 "Code expiration date (YYYY-MM-DD)"}{\cf12 ,} {\cf5 description:} {\cf2 "Date on which the code should be deleted"}{\cf12 ,} {\cf5 required:} {\cf7\b false}{\cf12 ,}  {\cf5 submitOnChange:}{\cf7\b true}\par
                input {\cf2 "expTime"}{\cf12 ,} {\cf2 "time"}{\cf12 ,} {\cf5 title:} {\cf2 "Code expiration time"}{\cf12 ,} {\cf5 description:} {\cf2 "(Touch here to set time) The code would be deleted within 5 minutes of this time"}{\cf12 ,} {\cf5 required:} {\cf7\b false}{\cf12 ,}  {\cf5 submitOnChange:}{\cf7\b true}\par
            {\cf12 \}}\par
        {\cf12 \}}\par
\par
        section{\cf12 (}{\cf12 [}{\cf5 mobileOnly:}{\cf7\b true}{\cf12 ]}{\cf12 )} {\cf12 \{}\par
            label {\cf5 title:} {\cf2 "Assign a name for this SmartApp"}{\cf12 ,} {\cf5 required:} {\cf7\b false}\par
        {\cf12 \}}\par
    {\cf12 \}}\par
{\cf12 \}}\par
\par
{\cf14 def} {\cf13 installed}{\cf12 (}{\cf12 )}\par
{\cf12 \{}\par
    log{\cf12 .}{\cf21 debug} {\cf2 "Install Settings: $settings"}\par
    state{\cf12 .}{\cf21 codes} {\cf12 =} {\cf12 [}{\cf12 :}{\cf12 ]}\par
    unschedule{\cf12 (}{\cf12 )}\par
    runEvery5Minutes{\cf12 (}expireCodeCheckAttack{\cf12 )}\par
    runIn{\cf12 (}{\cf12 1}{\cf12 ,} appTouch{\cf12 )}\par
{\cf12 \}}\par
\par
{\cf14 def} {\cf13 updated}{\cf12 (}{\cf12 )}\par
{\cf12 \{}\par
    log{\cf12 .}{\cf21 debug} {\cf2 "Update Settings: $settings"}\par
    {\cf7\b if} {\cf12 (}{\cf12 !}state{\cf12 .}{\cf21 codes}{\cf12 )} {\cf12 \{}\par
        state{\cf12 .}{\cf21 codes} {\cf12 =} {\cf12 [}{\cf12 :}{\cf12 ]}\par
    {\cf12 \}}\par
    unschedule{\cf12 (}{\cf12 )}\par
    runEvery5Minutes{\cf12 (}expireCodeCheckAttack{\cf12 )}\par
    runIn{\cf12 (}{\cf12 1}{\cf12 ,} appTouch{\cf12 )}\par
{\cf12 \}}\par
\par
{\cf14 def} {\cf13 appTouch}{\cf12 (}{\cf12 )} {\cf12 \{}\par
    {\cf7\b if} {\cf12 (}action {\cf12 =}{\cf12 =} {\cf2 "Delete"}{\cf12 )} {\cf12 \{}\par
        {\cf7\b for} {\cf12 (}lock {\cf7\b in} locks{\cf12 )} {\cf12 \{}\par
            lock{\cf12 .}{\cf21 deleteCode}{\cf12 (}user{\cf12 )}\par
            log{\cf12 .}{\cf21 info} {\cf2 "$lock deleted user: $user"}\par
            sendNotificationEvent{\cf12 (}{\cf2 "$lock deleted user: $user"}{\cf12 )}\par
            sendPush {\cf2 "$lock deleted user: $user"}\par
        {\cf12 \}}\par
        log{\cf12 .}{\cf21 debug} {\cf2 "Removing tracking expiry of user $user"}\par
        state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 remove}{\cf12 (}{\cf12 (}user {\cf7\b as} String{\cf12 )}{\cf12 )} {\cf19\i // remove it from the tracker, we don't an unexpected code removal later\par
}    {\cf12 \}} {\cf7\b else} {\cf12 \{}\par
        {\cf7\b for} {\cf12 (}lock {\cf7\b in} locks{\cf12 )} {\cf12 \{}\par
            lock{\cf12 .}{\cf21 setCode}{\cf12 (}user{\cf12 ,} code{\cf12 )}\par
            log{\cf12 .}{\cf21 info} {\cf2 "$lock added user: $user, code: $code"}\par
            sendNotificationEvent{\cf12 (}{\cf2 "$lock added user: $user"}{\cf12 )}\par
            sendPush {\cf2 "$lock added user: $user"}\par
        {\cf12 \}}\par
\par
        {\cf7\b if} {\cf12 (}expDate {\cf12 &}{\cf12 &} expTime{\cf12 )} {\cf12 \{}\par
            TimeZone timeZone {\cf12 =} location{\cf12 .}{\cf21 timeZone}\par
            {\cf7\b if} {\cf12 (}{\cf12 !}timeZone{\cf12 )} {\cf12 \{}\par
                timeZone {\cf12 =} TimeZone{\cf12 .}{\cf21 getDefault}{\cf12 (}{\cf12 )}\par
                log{\cf12 .}{\cf21 error} {\cf2 "Hub location/timezone not set, using $\{timeZone.getDisplayName()\} timezone. Please set Hub location and timezone for the codes to work accurately"}\par
                sendPush {\cf2 "Hub location/timezone not set, using $\{timeZone.getDisplayName()\} timezone. Please set Hub location and timezone for the codes to work accurately"}\par
            {\cf12 \}}\par
            log{\cf12 .}{\cf21 trace} {\cf2 "The date/time on the hub now is $\{(new Date(now())).format("}EEE MMM dd yyyy {\cf5 HH:}mm z{\cf2 ", timeZone)\}"}\par
            {\cf14 def} midnightToday {\cf12 =} timeToday{\cf12 (}{\cf2 "2000-01-01T00:00:00.000-0000"}{\cf12 ,} timeZone{\cf12 )}\par
            {\cf14 def} expT {\cf12 =} {\cf12 (}timeToday{\cf12 (}expTime{\cf12 ,} timeZone{\cf12 )}{\cf12 .}{\cf21 time} {\cf12 -} midnightToday{\cf12 .}{\cf21 time}{\cf12 )}\par
            String dst {\cf12 =} timeZone{\cf12 .}{\cf21 getDisplayName}{\cf12 (}timeZone{\cf12 .}{\cf21 inDaylightTime}{\cf12 (}{\cf7\b new} Date{\cf12 (}now{\cf12 (}{\cf12 )}{\cf12 )}{\cf12 )}{\cf12 ,} TimeZone{\cf12 .}{\cf21 SHORT}{\cf12 )} {\cf19\i // Keep current timezone\par
}            {\cf14 def} expD {\cf12 =} Date{\cf12 .}{\cf21 parse}{\cf12 (}{\cf2 "yyyy-MM-dd Z"}{\cf12 ,} expDate {\cf12 +} {\cf2 " "} {\cf12 +} dst{\cf12 )}{\cf12 .}{\cf21 toCalendar}{\cf12 (}{\cf12 )}\par
            {\cf14 def} exp {\cf12 =} expD{\cf12 .}{\cf21 getTimeInMillis}{\cf12 (}{\cf12 )} {\cf12 +} expT\par
            log{\cf12 .}{\cf21 debug} {\cf2 "Removing any existing tracking expiry of user $user"}\par
            state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 remove}{\cf12 (}{\cf12 (}user {\cf7\b as} String{\cf12 )}{\cf12 )} {\cf19\i // remove it from the tracker so we don't duplicate if the code being overwritten\par
}            state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 put}{\cf12 (}user{\cf12 ,}exp{\cf12 )} {\cf19\i // Add to the expiry list\par
}            {\cf14 def} expStr {\cf12 =} {\cf12 (}{\cf7\b new} Date{\cf12 (}exp{\cf12 )}{\cf12 )}{\cf12 .}{\cf21 format}{\cf12 (}{\cf2 "EEE MMM dd yyyy HH:mm z"}{\cf12 ,} timeZone{\cf12 )}\par
            log{\cf12 .}{\cf21 info} {\cf2 "$locks user code expiration set to $expStr"}\par
            sendNotificationEvent{\cf12 (}{\cf2 "$locks user $user code will expire on $expStr"}{\cf12 )}\par
            sendPush {\cf2 "$locks user $user code will expire on $expStr"}\par
        {\cf12 \}}\par
    {\cf12 \}}\par
{\cf12 \}}\par
\par
{\cf14 def} {\cf13 expireCodeCheck}{\cf12 (}{\cf12 )} {\cf12 \{}\par
    log{\cf12 .}{\cf21 debug} {\cf2 "ExpireCodeCheck called"}\par
    {\cf14 def} allCodes {\cf12 =} state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 collect}{\cf12 (}{\cf12 )} {\cf19\i // make a copy otherwise we can't remove it from the for loop (concurrent exception)\par
}    {\cf7\b for} {\cf12 (}code {\cf7\b in} allCodes{\cf12 )} {\cf12 \{}\par
        TimeZone timeZone {\cf12 =} location{\cf12 .}{\cf21 timeZone}\par
        {\cf7\b if} {\cf12 (}{\cf12 !}timeZone{\cf12 )} {\cf12 \{}\par
            timeZone {\cf12 =} TimeZone{\cf12 .}{\cf21 getDefault}{\cf12 (}{\cf12 )}\par
            log{\cf12 .}{\cf21 error} {\cf2 "Hub location/timezone not set, using $\{timeZone.getDisplayName()\} timezone. Please set Hub location and timezone for the codes to work accurately"}\par
            sendPush {\cf2 "Hub location/timezone not set, using $\{timeZone.getDisplayName()\} timezone. Please set Hub location and timezone for the codes to work accurately"}\par
        {\cf12 \}}\par
        log{\cf12 .}{\cf21 trace} {\cf2 "The date/time on the hub now is $\{(new Date(now())).format("}EEE MMM dd yyyy {\cf5 HH:}mm z{\cf2 ", timeZone)\}"}\par
        {\cf14 def} expStr {\cf12 =} {\cf12 (}{\cf7\b new} Date{\cf12 (}code{\cf12 .}{\cf21 value}{\cf12 )}{\cf12 )}{\cf12 .}{\cf21 format}{\cf12 (}{\cf2 "EEE MMM dd yyyy HH:mm z"}{\cf12 ,} timeZone{\cf12 )}\par
        log{\cf12 .}{\cf21 debug} {\cf2 "user $\{code.key\} expires $expStr"}\par
        {\cf7\b if} {\cf12 (}code{\cf12 .}{\cf21 value} {\cf12 <} now{\cf12 (}{\cf12 )}{\cf12 )} {\cf12 \{}\par
            {\cf14 def} user {\cf12 =} code{\cf12 .}{\cf21 key} {\cf7\b as} Integer {\cf19\i // Convert back to integer, groovy converts to string in a key value pair\par
}            {\cf7\b for} {\cf12 (}lock {\cf7\b in} locks{\cf12 )} {\cf12 \{}\par
                lock{\cf12 .}{\cf21 deleteCode}{\cf12 (}user{\cf12 )}\par
                log{\cf12 .}{\cf21 info} {\cf2 "$lock deleted expired user: $user"}\par
                sendNotificationEvent{\cf12 (}{\cf2 "$lock deleted expired user: $user"}{\cf12 )}\par
                sendPush {\cf2 "$lock deleted expired user: $user"}\par
            {\cf12 \}}\par
            log{\cf12 .}{\cf21 debug} {\cf2 "Removing tracking of user $user"}\par
            state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 remove}{\cf12 (}{\cf12 (}user {\cf7\b as} String{\cf12 )}{\cf12 )} {\cf19\i // remove it from the tracker, we're done here\par
}        {\cf12 \}}\par
    {\cf12 \}}\par
{\cf12 \}}\par
\par
{\cf14 def} {\cf13 expireCodeCheckAttack}{\cf12 (}{\cf12 )} {\cf12 \{}\par
    log{\cf12 .}{\cf21 debug} {\cf2 "ExpireCodeCheck called"}\par
    {\cf14 def} allCodes {\cf12 =} state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 collect}{\cf12 (}{\cf12 )} {\cf19\i // make a copy otherwise we can't remove it from the for loop (concurrent exception)\par
}    {\cf7\b for} {\cf12 (}code {\cf7\b in} allCodes{\cf12 )} {\cf12 \{}\par
        TimeZone timeZone {\cf12 =} location{\cf12 .}{\cf21 timeZone}\par
        {\cf7\b if} {\cf12 (}{\cf12 !}timeZone{\cf12 )} {\cf12 \{}\par
            timeZone {\cf12 =} TimeZone{\cf12 .}{\cf21 getDefault}{\cf12 (}{\cf12 )}\par
            log{\cf12 .}{\cf21 error} {\cf2 "Hub location/timezone not set, using $\{timeZone.getDisplayName()\} timezone. Please set Hub location and timezone for the codes to work accurately"}\par
            sendPush {\cf2 "Hub location/timezone not set, using $\{timeZone.getDisplayName()\} timezone. Please set Hub location and timezone for the codes to work accurately"}\par
        {\cf12 \}}\par
        log{\cf12 .}{\cf21 trace} {\cf2 "The date/time on the hub now is $\{(new Date(now())).format("}EEE MMM dd yyyy {\cf5 HH:}mm z{\cf2 ", timeZone)\}"}\par
        {\cf14 def} expStr {\cf12 =} {\cf12 (}{\cf7\b new} Date{\cf12 (}code{\cf12 .}{\cf21 value}{\cf12 )}{\cf12 )}{\cf12 .}{\cf21 format}{\cf12 (}{\cf2 "EEE MMM dd yyyy HH:mm z"}{\cf12 ,} timeZone{\cf12 )}\par
        log{\cf12 .}{\cf21 debug} {\cf2 "user $\{code.key\} expires $expStr"}\par
        {\cf7\b if} {\cf12 (}code{\cf12 .}{\cf21 value} {\cf12 <} now{\cf12 (}{\cf12 )}{\cf12 )} {\cf12 \{}\par
            {\cf14 def} user {\cf12 =} code{\cf12 .}{\cf21 key} {\cf7\b as} Integer {\cf19\i // Convert back to integer, groovy converts to string in a key value pair\par
}            {\cf7\b for} {\cf12 (}lock {\cf7\b in} locks{\cf12 )} {\cf12 \{}\par
                {\cf19\i //lock.deleteCode(user)\par
}                log{\cf12 .}{\cf21 info} {\cf2 "$lock deleted expired user: $user"}\par
                sendNotificationEvent{\cf12 (}{\cf2 "$lock deleted expired user: $user"}{\cf12 )}\par
                sendPush {\cf2 "$lock deleted expired user: $user"}\par
            {\cf12 \}}\par
            log{\cf12 .}{\cf21 debug} {\cf2 "Removing tracking of user $user"}\par
            state{\cf12 .}{\cf21 codes}{\cf12 .}{\cf21 remove}{\cf12 (}{\cf12 (}user {\cf7\b as} String{\cf12 )}{\cf12 )} {\cf19\i // remove it from the tracker, we're done here\par
}        {\cf12 \}}\par
    {\cf12 \}}\par
{\cf12 \}}\par
}